apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
  namespace: sonarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr
      app.kubernetes.io/name: sonarr
  serviceName: sonarr
  template:
    metadata:
      labels:
        app: sonarr
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
        
    spec:
      initContainers:
        - name: format-data
          image: ubuntu
          securityContext:
            privileged: true
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt update && apt install -y e2fsprogs mount && \
              mkfs.ext4 /dev/sonarr-data || true && \
              mkdir -p /mnt/data && \
              mount /dev/sonarr-data /mnt/data
          volumeDevices:
            - name: sonarr-data
              devicePath: /dev/sonarr-data
          volumeMounts:
            - name: data-mount
              mountPath: /mnt/data
      containers:
        - image: lscr.io/linuxserver/sonarr:latest
          imagePullPolicy: IfNotPresent
          name: sonarr
          ports:
            - containerPort: 8989
              name: sonarr
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Oslo"
          volumeMounts:
            - mountPath: /data
              name: data-mount
            - mountPath: /tv
              name: sonarr-tv
            - mountPath: /downloads
              name: sonarr-tv
      serviceAccountName: sonarr
      terminationGracePeriodSeconds: 120
      volumes:
        - name: sonarr-data
          persistentVolumeClaim:
            claimName: data-pvc
        - name: data-mount
          emptyDir: {}

        - name: sonarr-tv
          persistentVolumeClaim:
            claimName: tv-pvc
        - name: sonarr-downloads
          persistentVolumeClaim:
            claimName: downloads-pvc