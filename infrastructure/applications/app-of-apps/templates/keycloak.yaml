apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak
  namespace: argocd
spec:
  destination:
    namespace: keycloak
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    repoURL: {{ .Values.spec.keycloak.repoUrl }}
    targetRevision: {{ .Values.spec.keycloak.targetRevision }}
    chart: keycloak
    helm:
        values: |
          keycloakConfigCli:
            enabled: true
            configuration:
              home.json: |
                {
                  "realm": "home",
                  "enabled": true,
                  "registrationAllowed": true,
                  "users": [
                    {
                      "username": "{{ .Values.spec.keycloak.username }}",
                      "enabled": true,
                      "credentials": [
                        {
                          "type": "password",
                          "value": "initialpassword"
                        }
                      ]

                    }
                  ]
                }

          global:
            postgresql:
              auth:
                username: bn_keycloak
                password: bn_keycloak
                database: bitnami_keycloak
          extraEnvVars:
            - name: KEYCLOAK_LOG_LEVEL
              value: DEBUG

          persistence:
            enabled: true  
            existingClaim: keycloak-pvc
          
          ingress:
            enabled: true
            hostname: {{ .Values.spec.keycloak.host }}
            ingressClassName: traefik
            path: /
            annotations:
                cert-manager.io/cluster-issuer: home-intermediate-ca-issuer
                cert-manager.io/common-name: "{{ .Values.spec.keycloak.host }}"
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
            tls: true
          
          auth:
            tls:
              enabled: false
              autogenerated: false
            adminPassword: "{{ .Values.spec.keycloak.adminPassword}}"

          postgresql:
            enabled: true
            auth:
              username: bn_keycloak
              password: bn_keycloak
              database: bitnami_keycloak

          service:
            type: ClusterIP

          readinessProbe:
            httpGet:
              path: /realms/master
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5

          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true